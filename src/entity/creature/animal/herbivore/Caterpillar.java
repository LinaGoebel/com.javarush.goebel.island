package entity.creature.animal.herbivore;

import entity.Location;
import entity.creature.Creature;
import entity.creature.animal.Animal;
import entity.creature.plant.Plant;

public class Caterpillar extends Herbivore {

  public Caterpillar(Location location) {
    super(location);
    this.weight = 0.01;
    this.maxSatiety = 0;
    this.satiety = 0; // –ì—É—Å–µ–Ω–∏—Ü–∞ –≤—Å–µ–≥–¥–∞ "–≥–æ–ª–æ–¥–Ω–∞", –Ω–æ –µ–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–∏—â–∞
    this.maxPopulationPerCell = 1000; // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≥—É—Å–µ–Ω–∏—Ü –Ω–∞ –æ–¥–Ω–æ–π –∫–ª–µ—Ç–∫–µ
    this.movementSpeed = 0; // –ì—É—Å–µ–Ω–∏—Ü–∞ –Ω–µ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è
  }

  @Override
  protected double calculateEatProbability(Creature creature) {
    if (creature instanceof Plant) {
      return 1.0; // –ì—É—Å–µ–Ω–∏—Ü–∞ –µ—Å—Ç —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Ç–µ–Ω–∏—è
    }
    return 0.0;
  }

  @Override
  protected int calculateNutritionValue(Creature creature) {
    if (creature instanceof Plant plant) {
      int value = Math.min(plant.getQuantity(), 1); // –ï—Å—Ç –ø–æ 1 –µ–¥–∏–Ω–∏—Ü–µ —Ä–∞—Å—Ç–µ–Ω–∏—è
      plant.reduce(value);
      return value;
    }
    return 0;
  }

  @Override
  protected Animal createOffspring(Location location) {
    return new Caterpillar(location);
  }


  @Override
  public String getSymbol() {
    return "üêõ";
  }
}
