package entity.creature.animal.predator;

import entity.Location;
import entity.creature.Creature;
import entity.creature.animal.Animal;
import entity.creature.animal.herbivore.Caterpillar;
import entity.creature.animal.herbivore.Duck;
import entity.creature.animal.herbivore.Mouse;
import entity.creature.animal.herbivore.Rabbit;

import java.util.HashMap;
import java.util.Map;

public class Fox extends Predator {

  // –ö–∞—Ä—Ç–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –ø–æ–µ–¥–∞–Ω–∏—è –¥–ª—è –ª–∏—Å—ã
  private static final Map<Class<? extends Creature>, Double> FOX_EATING_PROBABILITIES = new HashMap<>();

  static {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏–∑ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã
    FOX_EATING_PROBABILITIES.put(Rabbit.class, 0.70);
    FOX_EATING_PROBABILITIES.put(Mouse.class, 0.90);
    FOX_EATING_PROBABILITIES.put(Duck.class, 0.60);
    FOX_EATING_PROBABILITIES.put(Caterpillar.class, 0.40);
  }

  // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–æ–∫–∞—Ü–∏—é
  public Fox(Location location) {
    super(location); // –ü–µ—Ä–µ–¥–∞—ë–º –ª–æ–∫–∞—Ü–∏—é –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å
    this.weight = 8;                 // –í–µ—Å –ª–∏—Å—ã
    this.satiety = 2;                // –ù–∞—á–∞–ª—å–Ω–∞—è —Å—ã—Ç–æ—Å—Ç—å
    this.maxSatiety = 2;             // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—ã—Ç–æ—Å—Ç—å
    this.maxPopulationPerCell = 30;  // –ú–∞–∫—Å–∏–º—É–º –æ—Å–æ–±–µ–π –Ω–∞ –æ–¥–Ω–æ–π –∫–ª–µ—Ç–∫–µ
    this.movementSpeed = 2;          // –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è (–∫–ª–µ—Ç–æ–∫ –∑–∞ —Ö–æ–¥)
  }

  @Override
  protected double calculateEatProbability(Creature creature) {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –∏–ª–∏ 0.0, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤–∞ –Ω–µ—Ç –≤ –∫–∞—Ä—Ç–µ
    return FOX_EATING_PROBABILITIES.getOrDefault(creature.getClass(), 0.0);
  }

  @Override
  protected int calculateNutritionValue(Creature creature) {
    // –ï—Å–ª–∏ —Å—ä–µ–¥–µ–Ω–æ –∂–∏–≤–æ—Ç–Ω–æ–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –≤–µ—Å
    if (creature instanceof Animal victim) {
      return (int) victim.weight;
    }
    // –õ–∏—Å–∞ –Ω–µ –µ—Å—Ç —Ä–∞—Å—Ç–µ–Ω–∏—è
    return 0;
  }

  @Override
  protected Animal createOffspring(Location location) {
    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ª–∏—Å—ë–Ω–∫–∞
    return new Fox(location);
  }

  @Override
  public String getSymbol() {
    // –°–∏–º–≤–æ–ª –ª–∏—Å—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–µ
    return "ü¶ä";
  }
}